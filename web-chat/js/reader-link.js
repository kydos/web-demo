// Generated by CoffeeScript 1.7.1
(function() {
  var closeConnections, drt, konsole, root, setupReaderSocket, socketMap, urlMap, z_;

  importScripts('coffez.js', 'config.js', 'control-commands.js');

  root = this;

  z_ = coffez;

  drt = dds.runtime;

  konsole = {};

  konsole.log = function(msg) {
    var cmd;
    cmd = drt.WriteLog(drt.EntityKind.Worker, msg);
    return root.postMessage(cmd);
  };

  socketMap = {};

  urlMap = {};

  setupReaderSocket = function(url, eid) {
    var socket;
    socket = new WebSocket(url);
    konsole.log("Created Websocket for DR at " + url);
    socketMap[eid] = socket;
    urlMap[eid] = url;
    socket.onopen = (function(_this) {
      return function(evt) {
        konsole.log("DR Websocket is open");
        return root.postMessage(drt.OnConnectedDataReader(url, eid));
      };
    })(this);
    socket.onclose = (function(_this) {
      return function(evt) {
        konsole.log("DR Websocket is closed");
        delete socketMap[eid];
        return root.postMessage(drt.OnDisconnectedDataReader(url, eid));
      };
    })(this);
    return socket.onmessage = (function(_this) {
      return function(evt) {
        evt = drt.OnDataAvailable(evt.data, eid);
        return root.postMessage(drt.OnDataAvailable(evt.data, eid));
      };
    })(this);
  };

  closeConnections = function() {
    var eid, s, _results;
    _results = [];
    for (eid in socketMap) {
      s = socketMap[eid];
      s.close();
      _results.push(root.postMessage(OnDisconnectedDataReader(urlMap[eid], eid)));
    }
    return _results;
  };

  root.onmessage = function(evt) {
    var cmd;
    cmd = evt.data;
    switch (false) {
      case !z_.match(cmd.h, drt.ConnectDataReaderCmd):
        konsole.log("Setting-up Socket for : " + cmd.eid + ", at " + cmd.url);
        return setupReaderSocket(cmd.url, cmd.eid);
      case !z_.match(cmd.h, drt.Disconnect):
        return closeConnections();
      default:
        return konsole.log("Reader Worker Received Unknown Command!");
    }
  };

}).call(this);
